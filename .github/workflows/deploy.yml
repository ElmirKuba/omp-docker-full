name: üöÄ Manual Deploy with Env and Branch

on:
  workflow_dispatch:
    inputs:
      branch:
        description: '–í—ã–±–µ—Ä–∏ –≤–µ—Ç–∫—É (–∏–∑ Git), –∫–æ—Ç–æ—Ä—É—é —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–ø–ª–æ–∏—Ç—å'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - rc
          - develop

      environment:
        description: '–í—ã–±–µ—Ä–∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ'
        required: true
        default: 'prod7777'
        type: choice
        options:
          - prod7777
          - stage5555
          - dev1111

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ deploy_docker.sh –∏ –∑–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è –Ω–∞ –í–î–°
        env:
          VDS_USER: ${{ secrets.VDS_USER }}
          VDS_IP: ${{ secrets.VDS_IP }}
          VDS_PASSWORD: ${{ secrets.VDS_PASSWORD }}
          DEPLOY_ENV: ${{ github.event.inputs.environment }}
          DEPLOY_BRANCH: ${{ github.event.inputs.branch }}
        run: |
          echo "üîß –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –∏ –¥–µ–ø–ª–æ–∏–º"
          sshpass -p "$VDS_PASSWORD" ssh -o StrictHostKeyChecking=no "$VDS_USER@$VDS_IP" << EOF
            set -euo pipefail

            # –ö–∞—Ç–∞–ª–æ–≥, –≥–¥–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫–ª–æ–Ω (–∏–ª–∏ –≥–¥–µ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–¥–∏–º)
            REPO_DIR="/home/deploy/${DEPLOY_ENV}"

            # –ï—Å–ª–∏ —Ä–µ–ø–æ –µ—â—ë –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ‚Äî —Å–æ–∑–¥–∞—ë–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º remote
            if [ ! -d "\$REPO_DIR/.git" ]; then
              echo "üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ \$REPO_DIR, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
              mkdir -p "\$REPO_DIR"
              cd "\$REPO_DIR"
              git init
              git remote add origin git@github.com:ElmirKuba/omp-docker-full.git
            else
              cd "\$REPO_DIR"
            fi

          # –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∏–∑ origin/main —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (shallow fetch)
          echo "üîÑ Fetch origin/main (shallow)"
          git fetch origin "$DEPLOY_BRANCH" --depth=1

          # –ò–∑–≤–ª–µ–∫–∞–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–∞–π–ª deploy_docker.sh
          echo "üì• –í—ã—Ç—è–≥–∏–≤–∞–µ–º deploy_docker.sh"
          git show "origin/$DEPLOY_BRANCH":deploy_docker.sh \
              > /home/deploy/deploy_docker.sh

          # –î–µ–ª–∞–µ–º –µ–≥–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–º
          chmod +x /home/deploy/deploy_docker.sh

          # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
          echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º deploy_docker.sh"
          DEPLOY_ENV=${DEPLOY_ENV} DEPLOY_BRANCH=${DEPLOY_BRANCH} bash /home/deploy/deploy_docker.sh

          echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
          EOF
